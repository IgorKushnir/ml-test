@use 'sass:math';
@use '_breakpoints' as *;

$grid-columns: 12;
$grid-max-width: 1600px;

$layout-values: flex-start, flex-end, center, space-between, space-around;

//$spacing-unit: .5rem;        // 8px
//
//$xxs: $spacing-unit/2;       // 4px
//$xs: $spacing-unit;          // 8px
//$sm: $spacing-unit * 2;      // 16px Base
//$md: $spacing-unit * 3;      // 24px
//$lg: $spacing-unit * 4;      // 32px
//$xl: $spacing-unit * 5;      // 40px
//$xxl: $spacing-unit * 8;     // 64px

.container {
  position: relative;
  width: 100%;
  max-width: $grid-max-width;
  margin: 0 auto;
  padding: 0 40px;
  box-sizing: border-box;
}

.anti-container {
  width: 100vw;
  padding: 0;
  margin: 0 -50vw;
}
.row {
  position: relative;
  width: 100%;
  display: flex;
  flex-flow: row wrap;
}


.gap-S > * {
  padding: 20px;
}
.gap-S {
  margin: -20px;
  width: calc(100% + 40px);
}
.gap-L > * {
  padding: 40px;
}
.gap-L {
  margin: -40px;
  width: calc(100% + 80px);
}


.gap-v-M > * {
  padding-top: 56px;
  padding-bottom: 56px;
}


@for $i from 1 through $grid-columns {
  .col-#{$i} {
    box-sizing: border-box;
    flex-grow: 0;
    width: math.div($i * 100%, $grid-columns);
  }
}



@include xl {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include lg {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include md {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }

  .gap-S > * {
    padding: 16px;
  }
  .gap-S {
    margin: -16px;
    width: calc(100% + 32px);
  }

  .gap-L > * {
    padding: 20px;
  }
  .gap-L {
    margin: -20px;
    width: calc(100% + 40px);
  }

  .gap-v-M > * {
    padding-top: 32px;
    padding-bottom: 32px;
  }


  //----------- Mobile --------------
  .container {
    padding: 0 32px;
  }


}
@include sm {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }

  .gap-L > * {
    padding: 20px;
  }
  .gap-L {
    margin-left: -20px;
    margin-right: -20px;
  }
}


@each $val in $layout-values {
  .justify-#{$val} {
    justify-content: $val;
  }
}
